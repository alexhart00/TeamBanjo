import { createCookieFactory, createCookieSessionStorageFactory, createSessionStorageFactory, createMemorySessionStorageFactory, createRequestHandler } from '@remix-run/server-runtime';
export { MaxPartSizeExceededError, createSession, defer, isCookie, isSession, json, redirect, unstable_composeUploadHandlers, unstable_createMemoryUploadHandler, unstable_parseMultipartFormData } from '@remix-run/server-runtime';

var s=new TextEncoder,c=async(e,t)=>{let r=await p(t,["sign"]),o=s.encode(e),n=await crypto.subtle.sign("HMAC",r,o),a=btoa(String.fromCharCode(...new Uint8Array(n))).replace(/=+$/,"");return e+"."+a},u=async(e,t)=>{let r=e.lastIndexOf("."),o=e.slice(0,r),n=e.slice(r+1),a=await p(t,["verify"]),l=s.encode(o),g=y(atob(n));return await crypto.subtle.verify("HMAC",a,g,l)?o:!1};async function p(e,t){return await crypto.subtle.importKey("raw",s.encode(e),{name:"HMAC",hash:"SHA-256"},!1,t)}function y(e){let t=new Uint8Array(e.length);for(let r=0;r<e.length;r++)t[r]=e.charCodeAt(r);return t}var i=createCookieFactory({sign:c,unsign:u}),f=createCookieSessionStorageFactory(i),d=createSessionStorageFactory(i),H=createMemorySessionStorageFactory(d);function F({build:e,mode:t,getLoadContext:r}){let o=createRequestHandler(e,t);return async n=>o(n,await r?.(n))}function M(e){return e.headers.get("oxygen-buyer-ip")??void 0}function A(e){let t=e.headers;return {requestGroupId:t.get("request-id"),buyerIp:t.get("oxygen-buyer-ip"),cookie:t.get("cookie")}}

export { i as createCookie, f as createCookieSessionStorage, H as createMemorySessionStorage, F as createRequestHandler, d as createSessionStorage, M as getBuyerIp, A as getStorefrontHeaders };
//# sourceMappingURL=out.js.map
//# sourceMappingURL=index.js.map