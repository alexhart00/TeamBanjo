{"version":3,"file":"check-lockfile.js","sourceRoot":"","sources":["../../../../src/cli/services/build/check-lockfile.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,aAAa,EAAC,MAAM,0BAA0B,CAAA;AACtD,OAAO,EAAC,SAAS,EAAC,MAAM,4CAA4C,CAAA;AACpE,OAAO,EAAC,UAAU,EAAC,MAAM,0BAA0B,CAAA;AACnD,OAAO,EAAC,6BAA6B,EAAC,MAAM,2BAA2B,CAAA;AACvE,OAAO,EAAC,WAAW,EAAC,MAAM,4BAA4B,CAAA;AAGtD,SAAS,sBAAsB;IAC7B,aAAa,CAAC;QACZ,QAAQ,EAAE,mBAAmB;QAC7B,IAAI,EACF,wEAAwE;YACxE,0EAA0E;YAC1E,gDAAgD;QAClD,SAAS,EAAE;YACT;gBACE,0BAA0B;gBAC1B;oBACE,OAAO,EAAE,uBAAuB;iBACjC;aACF;YACD,wCAAwC;SACzC;KACF,CAAC,CAAA;AACJ,CAAC;AAED,SAAS,wBAAwB,CAAC,SAAqB;IACrD,MAAM,eAAe,GAAG;QACtB,WAAW,EAAE,MAAM;QACnB,mBAAmB,EAAE,KAAK;QAC1B,gBAAgB,EAAE,MAAM;KACzB,CAAA;IAED,MAAM,YAAY,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,EAAE;QAC9C,OAAO,GAAG,QAAQ,gBAAgB,eAAe,CAAC,QAAQ,CAAC,GAAG,CAAA;IAChE,CAAC,CAAC,CAAA;IAEF,aAAa,CAAC;QACZ,QAAQ,EAAE,0BAA0B;QACpC,IAAI,EAAE;YACJ,uEAAuE;gBACrE,kEAAkE;gBAClE,4BAA4B;YAC9B,EAAC,IAAI,EAAE,EAAC,KAAK,EAAE,YAAY,EAAC,EAAC;SAC9B;QACD,SAAS,EAAE,CAAC,+BAA+B,EAAE,sCAAsC,CAAC;KACrF,CAAC,CAAA;AACJ,CAAC;AAED,SAAS,sBAAsB,CAAC,QAAgB;IAC9C,aAAa,CAAC;QACZ,QAAQ,EAAE,yBAAyB;QACnC,IAAI,EACF,0EAA0E;YAC1E,0EAA0E;YAC1E,YAAY;QACd,SAAS,EAAE;YACT,+DAA+D,QAAQ,EAAE;YACzE,sCAAsC;SACvC;KACF,CAAC,CAAA;AACJ,CAAC;AAID,MAAM,CAAC,KAAK,UAAU,mBAAmB,CAAC,SAAiB;IACzD,MAAM,kBAAkB,GAAG,MAAM,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,EAAE,YAAY,EAAE,EAAE;QAC5E,MAAM,YAAY,GAAG,WAAW,CAAC,SAAS,EAAE,YAAY,CAAC,CAAA;QACzD,IAAI,MAAM,UAAU,CAAC,YAAY,CAAC,EAAE;YAClC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAA;SACxC;aAAM;YACL,OAAO,GAAG,CAAA;SACX;IACH,CAAC,EAAE,OAAO,CAAC,OAAO,CAAC,EAAgB,CAAC,CAAC,CAAA;IAErC,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE;QAC9B,sBAAsB,EAAE,CAAA;QACxB,OAAO,SAAS,CAAA;KACjB;IAED,IAAI,kBAAkB,CAAC,MAAM,GAAG,CAAC,EAAE;QACjC,wBAAwB,CAAC,kBAAkB,CAAC,CAAA;QAC5C,OAAO,UAAU,CAAA;KAClB;IAED,MAAM,QAAQ,GAAG,kBAAkB,CAAC,CAAC,CAAE,CAAA;IACvC,MAAM,eAAe,GAAG,MAAM,6BAA6B,CAAC,SAAS,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAA;IAElF,IAAI,eAAe,CAAC,MAAM,EAAE;QAC1B,sBAAsB,CAAC,QAAQ,CAAC,CAAA;QAChC,OAAO,SAAS,CAAA;KACjB;IAED,OAAO,IAAI,CAAA;AACb,CAAC","sourcesContent":["import {renderWarning} from '@shopify/cli-kit/node/ui'\nimport {lockfiles} from '@shopify/cli-kit/node/node-package-manager'\nimport {fileExists} from '@shopify/cli-kit/node/fs'\nimport {checkIfIgnoredInGitRepository} from '@shopify/cli-kit/node/git'\nimport {resolvePath} from '@shopify/cli-kit/node/path'\nimport type {Lockfile} from '@shopify/cli-kit/node/node-package-manager'\n\nfunction missingLockfileWarning() {\n  renderWarning({\n    headline: 'No lockfile found',\n    body:\n      `If you don’t commit a lockfile, then your app might install the wrong ` +\n      `package versions when deploying. To avoid versioning issues, generate a ` +\n      `new lockfile and commit it to your repository.`,\n    nextSteps: [\n      [\n        'Generate a lockfile. Run',\n        {\n          command: 'npm|yarn|pnpm install',\n        },\n      ],\n      'Commit the new file to your repository',\n    ],\n  })\n}\n\nfunction multipleLockfilesWarning(lockfiles: Lockfile[]) {\n  const packageManagers = {\n    'yarn.lock': 'yarn',\n    'package-lock.json': 'npm',\n    'pnpm-lock.yaml': 'pnpm',\n  }\n\n  const lockfileList = lockfiles.map((lockfile) => {\n    return `${lockfile} (created by ${packageManagers[lockfile]})`\n  })\n\n  renderWarning({\n    headline: 'Multiple lockfiles found',\n    body: [\n      `Your project contains more than one lockfile. This can cause version ` +\n        `conflicts when installing and deploying your app. The following ` +\n        `lockfiles were detected:\\n`,\n      {list: {items: lockfileList}},\n    ],\n    nextSteps: ['Delete any unneeded lockfiles', 'Commit the change to your repository'],\n  })\n}\n\nfunction lockfileIgnoredWarning(lockfile: string) {\n  renderWarning({\n    headline: 'Lockfile ignored by Git',\n    body:\n      `Your project’s lockfile isn’t being tracked by Git. If you don’t commit ` +\n      `a lockfile, then your app might install the wrong package versions when ` +\n      `deploying.`,\n    nextSteps: [\n      `In your project’s .gitignore file, delete any references to ${lockfile}`,\n      'Commit the change to your repository',\n    ],\n  })\n}\n\ntype LockFileStatus = 'missing' | 'multiple' | 'ignored' | 'ok'\n\nexport async function checkLockfileStatus(directory: string): Promise<LockFileStatus> {\n  const availableLockfiles = await lockfiles.reduce(async (acc, lockFileName) => {\n    const lockfilePath = resolvePath(directory, lockFileName)\n    if (await fileExists(lockfilePath)) {\n      return (await acc).concat(lockFileName)\n    } else {\n      return acc\n    }\n  }, Promise.resolve([] as Lockfile[]))\n\n  if (!availableLockfiles.length) {\n    missingLockfileWarning()\n    return 'missing'\n  }\n\n  if (availableLockfiles.length > 1) {\n    multipleLockfilesWarning(availableLockfiles)\n    return 'multiple'\n  }\n\n  const lockfile = availableLockfiles[0]!\n  const ignoredLockfile = await checkIfIgnoredInGitRepository(directory, [lockfile])\n\n  if (ignoredLockfile.length) {\n    lockfileIgnoredWarning(lockfile)\n    return 'ignored'\n  }\n\n  return 'ok'\n}\n"]}