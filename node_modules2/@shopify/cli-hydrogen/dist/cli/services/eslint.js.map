{"version":3,"file":"eslint.js","sourceRoot":"","sources":["../../../src/cli/services/eslint.ts"],"names":[],"mappings":"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","sourcesContent":["import {HydrogenApp} from '../models/hydrogen.js'\nimport {genericConfigurationFileNames} from '../constants.js'\nimport {\n  addNPMDependenciesWithoutVersionIfNeeded,\n  findUpAndReadPackageJson,\n  writePackageJSON,\n} from '@shopify/cli-kit/node/node-package-manager'\nimport {addRecommendedExtensions, isVSCode} from '@shopify/cli-kit/node/vscode'\nimport {writeFile, fileExists, removeFile, fileContentPrettyFormat} from '@shopify/cli-kit/node/fs'\nimport {joinPath} from '@shopify/cli-kit/node/path'\nimport {AbortError} from '@shopify/cli-kit/node/error'\nimport {renderTasks, Task} from '@shopify/cli-kit/node/ui'\n\ninterface AddESlintOptions {\n  app: HydrogenApp\n  force: boolean\n  install: boolean\n}\n\nexport async function addESLint({app, force, install}: AddESlintOptions) {\n  const vscode = await isVSCode(app.directory)\n\n  const tasks: Task[] = [\n    {\n      title: 'Installing dependencies',\n      skip: () => !install,\n      task: async () => {\n        const requiredDependencies = ['eslint', 'eslint-plugin-hydrogen', 'prettier', '@shopify/prettier-config']\n        await addNPMDependenciesWithoutVersionIfNeeded(requiredDependencies, {\n          packageManager: app.packageManager,\n          type: 'prod',\n          directory: app.directory,\n        })\n      },\n    },\n\n    {\n      title: 'Adding ESLint configuration',\n      task: async () => {\n        const eslintConfigPath = joinPath(app.directory, genericConfigurationFileNames.eslint)\n\n        if (await fileExists(eslintConfigPath)) {\n          if (force) {\n            await removeFile(eslintConfigPath)\n          } else {\n            throw new AbortError('ESLint config already exists.', 'Use --force to override existing config.')\n          }\n        }\n\n        const extended = [`'plugin:hydrogen/recommended'`]\n\n        if (app.language === 'TypeScript') {\n          extended.push(`'plugin:hydrogen/typescript'`)\n        }\n\n        const eslintConfig = await fileContentPrettyFormat(\n          ['module.exports = {', 'extends: [', `${extended.join(',')}`, ' ],', ' };'].join('\\n'),\n          {path: genericConfigurationFileNames.eslint},\n        )\n\n        await writeFile(eslintConfigPath, eslintConfig)\n      },\n    },\n    {\n      title: 'Updating package.json',\n      task: async () => {\n        const packageJSON = (await findUpAndReadPackageJson(app.directory)).content\n        packageJSON.scripts = packageJSON.scripts || {}\n        packageJSON.scripts.lint = `eslint --ext .js,.ts,.jsx,.tsx src/`\n\n        packageJSON.prettier = '@shopify/prettier-config'\n\n        await writePackageJSON(app.directory, packageJSON)\n      },\n    },\n    {\n      title: 'Adding editor plugin recommendations',\n      skip: () => !vscode,\n      task: async () => {\n        await addRecommendedExtensions(app.directory, ['dbaeumer.vscode-eslint'])\n      },\n    },\n  ]\n  await renderTasks(tasks)\n}\n"]}