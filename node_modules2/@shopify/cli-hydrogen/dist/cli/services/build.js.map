{"version":3,"file":"build.js","sourceRoot":"","sources":["../../../src/cli/services/build.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,mBAAmB,EAAC,MAAM,2BAA2B,CAAA;AAC7D,OAAO,EAAC,KAAK,IAAI,SAAS,EAAC,MAAM,MAAM,CAAA;AACvC,OAAO,EAAC,UAAU,EAAC,MAAM,6BAA6B,CAAA;AACtD,OAAO,EAAC,WAAW,EAAC,MAAM,0BAA0B,CAAA;AAYpD,MAAM,UAAU,aAAa,CAAC,EAAC,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,YAAY,EAAE,OAAO,EAAa;IACzF,MAAM,YAAY,GAAG,EAAC,IAAI,EAAE,IAAI,EAAE,SAAS,EAAC,CAAA;IAE5C,OAAO,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC;SAC3B,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC;SAC7B,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;QACtB,KAAK,EAAE,YAAY,GAAG,OAAO;QAC7B,IAAI,EAAE,KAAK,IAAI,EAAE;YACf,IAAI,GAAG,KAAK,QAAQ,EAAE;gBACpB,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,MAAM,CAAA;aAC5B;YACD,IAAI,YAAY,EAAE;gBAChB,OAAO,CAAC,GAAG,CAAC,uBAAuB,GAAG,YAAY,CAAA;aACnD;YAED,IAAI;gBACF,MAAM,SAAS,CAAC;oBACd,GAAG,YAAY;oBACf,KAAK,EAAE;wBACL,MAAM,EAAE,QAAQ,GAAG,EAAE;wBACrB,GAAG,EAAE,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS;wBAClD,QAAQ,EAAE,GAAG,KAAK,QAAQ;qBAC3B;oBACD,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ;iBACtC,CAAC,CAAA;gBACF,8DAA8D;aAC/D;YAAC,OAAO,KAAU,EAAE;gBACnB,MAAM,UAAU,GAAG,IAAI,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA;gBAChD,UAAU,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAA;gBAC9B,MAAM,UAAU,CAAA;aACjB;QACH,CAAC;KACF,CAAC,CAAC,CAAA;AACP,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,KAAK,CAAC,OAAmB;IAC7C,MAAM,mBAAmB,CAAC,OAAO,CAAC,SAAS,CAAC,CAAA;IAE5C,MAAM,KAAK,GAAG,MAAM,aAAa,CAAC,OAAO,CAAC,CAAA;IAE1C,MAAM,WAAW,CAAC,KAAK,CAAC,CAAA;AAC1B,CAAC","sourcesContent":["import {checkLockfileStatus} from './build/check-lockfile.js'\nimport {build as viteBuild} from 'vite'\nimport {AbortError} from '@shopify/cli-kit/node/error'\nimport {renderTasks} from '@shopify/cli-kit/node/ui'\n\ntype Target = 'node' | 'client' | 'worker'\n\ninterface DevOptions {\n  directory: string\n  targets: {[key in Target]: boolean | string}\n  base?: string\n  assetBaseURL?: string\n  verbose?: boolean\n}\n\nexport function buildTaskList({directory, targets, base, assetBaseURL, verbose}: DevOptions) {\n  const commonConfig = {base, root: directory}\n\n  return Object.entries(targets)\n    .filter(([_, value]) => value)\n    .map(([key, value]) => ({\n      title: `Building ${key} code`,\n      task: async () => {\n        if (key === 'worker') {\n          process.env.WORKER = 'true'\n        }\n        if (assetBaseURL) {\n          process.env.HYDROGEN_ASSET_BASE_URL = assetBaseURL\n        }\n\n        try {\n          await viteBuild({\n            ...commonConfig,\n            build: {\n              outDir: `dist/${key}`,\n              ssr: typeof value === 'string' ? value : undefined,\n              manifest: key === 'client',\n            },\n            logLevel: verbose ? 'info' : 'silent',\n          })\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        } catch (error: any) {\n          const abortError = new AbortError(error.message)\n          abortError.stack = error.stack\n          throw abortError\n        }\n      },\n    }))\n}\n\nexport async function build(options: DevOptions) {\n  await checkLockfileStatus(options.directory)\n\n  const tasks = await buildTaskList(options)\n\n  await renderTasks(tasks)\n}\n"]}