{"version":3,"file":"config.js","sourceRoot":"","sources":["../../../../src/cli/services/deploy/config.ts"],"names":[],"mappings":"AACA,OAAO,EAAC,OAAO,EAAC,MAAM,2BAA2B,CAAA;AACjD,OAAO,EACL,wBAAwB,EACxB,eAAe,EACf,eAAe,EACf,yBAAyB,EACzB,wBAAwB,EACxB,kBAAkB,EAClB,kBAAkB,EAElB,uBAAuB,EACvB,wBAAwB,GACzB,MAAM,2BAA2B,CAAA;AAClC,OAAO,EAAC,WAAW,EAAC,MAAM,4BAA4B,CAAA;AACtD,OAAO,EAAC,gBAAgB,EAAC,MAAM,6BAA6B,CAAA;AAE5D,MAAM,kBAAkB,GAAsB;IAC5C,MAAM,EAAE,CAAC,WAAW,CAAC;IACrB,IAAI,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,iBAAiB,CAAC;IAC/E,OAAO,EAAE,CAAC,WAAW,EAAE,QAAQ,CAAC;IAChC,YAAY,EAAE,CAAC,eAAe,EAAE,MAAM,EAAE,iBAAiB,EAAE,OAAO,EAAE,SAAS,CAAC;IAC9E,UAAU,EAAE,CAAC,eAAe,CAAC;IAC7B,WAAW,EAAE,CAAC,MAAM,EAAE,WAAW,EAAE,YAAY,CAAC;IAChD,UAAU,EAAE,CAAC,OAAO,CAAC;CACtB,CAAA;AAED,MAAM,CAAC,MAAM,eAAe,GAAG,KAAK,EAAE,MAAoB,EAAE,EAAE;IAC5D,MAAM,yBAAyB,EAAE,CAAA;IACjC,IAAI;QACF,MAAM,wBAAwB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;KAC5C;IAAC,OAAO,GAAY,EAAE;QACrB,IAAI,GAAG,YAAY,wBAAwB,EAAE;YAC3C,MAAM,aAAa,CAAC,MAAM,CAAC,CAAA;SAC5B;aAAM;YACL,MAAM,GAAG,CAAA;SACV;KACF;AACH,CAAC,CAAA;AAED,MAAM,CAAC,MAAM,aAAa,GAAG,KAAK,EAAE,MAAoB,EAAE,EAAE;IAC1D,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;QACrB,MAAM,aAAa,GAAG,MAAM,OAAO,EAAE,CAAA;QACrC,IAAI,CAAC,aAAa;YAAE,MAAM,IAAI,gBAAgB,EAAE,CAAA;KACjD;IAED,MAAM,uBAAuB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;IAC1C,eAAe,CAAC,MAAM,CAAC,IAAI,EAAE,kBAAkB,CAAC,CAAA;IAChD,MAAM,wBAAwB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;IAC3C,MAAM,eAAe,CAAC,sCAAsC,EAAE,EAAC,SAAS,EAAE,MAAM,CAAC,IAAI,EAAC,CAAC,CAAA;AACzF,CAAC,CAAA;AAED,MAAM,CAAC,MAAM,gBAAgB,GAAG,KAAK,EAAE,MAAoB,EAA4B,EAAE;IACvF,MAAM,CAAC,YAAY,EAAE,SAAS,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;QAClD,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC;QAC/B,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC;KAChC,CAAC,CAAA;IAEF,OAAO;QACL,GAAG,MAAM;QACT,WAAW,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE;QACtE,aAAa,EAAE,MAAM,CAAC,aAAa,IAAI,YAAY,CAAC,OAAO;QAC3D,YAAY,EAAE,MAAM,CAAC,YAAY,IAAI,YAAY,CAAC,WAAW;QAC7D,SAAS,EAAE,YAAY,CAAC,IAAI;QAC5B,SAAS,EAAE,YAAY,CAAC,IAAI;QAC5B,SAAS;KACV,CAAA;AACH,CAAC,CAAA","sourcesContent":["import {DeployConfig, ReqDeployConfig} from './types.js'\nimport {gitInit} from '../../prompts/git-init.js'\nimport {\n  addAllToGitFromDirectory,\n  createGitCommit,\n  createGitIgnore,\n  ensureGitIsPresentOrAbort,\n  ensureInsideGitDirectory,\n  getHeadSymbolicRef,\n  getLatestGitCommit,\n  GitIgnoreTemplate,\n  initializeGitRepository,\n  OutsideGitDirectoryError,\n} from '@shopify/cli-kit/node/git'\nimport {resolvePath} from '@shopify/cli-kit/node/path'\nimport {AbortSilentError} from '@shopify/cli-kit/node/error'\n\nconst MINIMAL_GIT_IGNORE: GitIgnoreTemplate = {\n  system: ['.DS_Store'],\n  logs: ['logs', '*.log', 'npm-debug.log*', 'yarn-debug.log*', 'yarn-error.log*'],\n  testing: ['/coverage', '*.lcov'],\n  dependencies: ['/node_modules', '.npm', '.yarn-integrity', '/.pnp', '.pnp.js'],\n  typescript: ['*.tsbuildinfo'],\n  environment: ['.env', '.env.test', '.env.local'],\n  production: ['/dist'],\n}\n\nexport const validateProject = async (config: DeployConfig) => {\n  await ensureGitIsPresentOrAbort()\n  try {\n    await ensureInsideGitDirectory(config.path)\n  } catch (err: unknown) {\n    if (err instanceof OutsideGitDirectoryError) {\n      await initializeGit(config)\n    } else {\n      throw err\n    }\n  }\n}\n\nexport const initializeGit = async (config: DeployConfig) => {\n  if (!config.assumeYes) {\n    const shouldGitInit = await gitInit()\n    if (!shouldGitInit) throw new AbortSilentError()\n  }\n\n  await initializeGitRepository(config.path)\n  createGitIgnore(config.path, MINIMAL_GIT_IGNORE)\n  await addAllToGitFromDirectory(config.path)\n  await createGitCommit('Initial commit generated by Hydrogen', {directory: config.path})\n}\n\nexport const fillDeployConfig = async (config: DeployConfig): Promise<ReqDeployConfig> => {\n  const [latestCommit, commitRef] = await Promise.all([\n    getLatestGitCommit(config.path),\n    getHeadSymbolicRef(config.path),\n  ])\n\n  return {\n    ...config,\n    pathToBuild: config.pathToBuild ? resolvePath(config.pathToBuild) : '',\n    commitMessage: config.commitMessage ?? latestCommit.message,\n    commitAuthor: config.commitAuthor ?? latestCommit.author_name,\n    commitSha: latestCommit.hash,\n    timestamp: latestCommit.date,\n    commitRef,\n  }\n}\n"]}